function MomWebsite
    clc
    
    %% imports tidbits
    fileloc='C:\Users\ltsai\Documents\Personal\Github\VirginiaWebsite\VirginiaWebsite\';
    
    [Image,Title,Series,Seq,Desc,A,B,C,D,E,F,G,H,I] = importfile([fileloc,'script\PhotoData.xlsx']);
    
    header=fileread([fileloc,'script\src\Header.txt']);
    bodytop=fileread([fileloc,'script\src\BodyTop.txt']);
    ibody=fileread([fileloc,'script\src\i_Body.txt']);
    
    footer=fileread([fileloc,'script\src\Footer.txt']);
    ifile=[fileloc,'index.html'];
    
    bio=fileread([fileloc,'script\Biography.txt']);
    

    %% creates index file

    fid = fopen(ifile,'w');
    fprintf(fid, '%s', header);
    fclose(fid);
    
    fid = fopen(ifile,'a');
    
    biography=char(strsplit(bio,{char(13),char(10)},'CollapseDelimiters',true))
    %%close out
    for i=1:size(biography,1)
        fprintf(fid, '%s', '<p>');
        fprintf(fid, '%s', biography(i,:));
        fprintf(fid, '%s', '</p>');
    end
    
    fprintf(fid, '%s', bodytop);
    
    for i = 1:length(Image(~isnan(Image)))
            data=strrep(ibody,'[num]',num2str(Image(i),'%03.0f'));
            data=strrep(data,'[title]',Title(i));
            data=strrep(data,'[desc]',Desc(i));
            data=strrep(data,'[series]',Series(i));
            fprintf(fid, '%s', data);
            data
    end
    
    fprintf(fid, '%s', footer);
    fclose(fid);
    
    disp("Done")
end


function [Image,Dimensions,Title,Date,Price,Display,Feature,Tag1,Tag2,Tag3,Tag4,A,B,C,D] = importfile(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   [Image,Dimensions,Title,Date,Price,Display,Feature23selectedof21,Tag1,Tag2,Tag3,Tag4,A,B,C,D]
%   = IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   [Image,Dimensions,Title,Date,Price,Display,Feature23selectedof21,Tag1,Tag2,Tag3,Tag4,A,B,C,D]
%   = IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   [Image,Dimensions,Title,Date,Price,Display,Feature23selectedof21,Tag1,Tag2,Tag3,Tag4,A,B,C,D]
%   = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   [Image,Dimensions,Title,Date,Price,Display,Feature23selectedof21,Tag1,Tag2,Tag3,Tag4,A,B,C,D] = importfile('PaintingData.xlsx','Sheet1',1,68);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2020/08/17 10:52:28

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 5000;
end

%% Import the data
[~, ~, raw] = xlsread(workbookFile, sheetName, sprintf('A%d:O%d',startRow(1),endRow(1)));
for block=2:length(startRow)
    [~, ~, tmpRawBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:O%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[2,3,5,6,7,8,9,10,11,12,13,14,15]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,4]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Image = data(:,1);
Dimensions = stringVectors(:,1);
Title = stringVectors(:,2);
Date = data(:,2);
Price = stringVectors(:,3);
Display = categorical(stringVectors(:,4));
Feature = categorical(stringVectors(:,5));
Tag1 = stringVectors(:,6);
Tag2 = stringVectors(:,7);
Tag3 = stringVectors(:,8);
Tag4 = stringVectors(:,9);
A = stringVectors(:,10);
B = stringVectors(:,11);
C = stringVectors(:,12);
D = stringVectors(:,13);

end
